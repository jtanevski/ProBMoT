package fit.jvode.jna.sundials;
import com.ochafik.lang.jnaerator.runtime.LibraryExtractor;
import com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper;
import com.ochafik.lang.jnaerator.runtime.Mangling;
import com.sun.jna.Callback;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.DoubleByReference;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.PointerByReference;
import java.nio.DoubleBuffer;
import java.nio.IntBuffer;
/**
 * JNA Wrapper for library <b>sundials</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface SundialsLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = LibraryExtractor.getLibraryPath("sundials", true, SundialsLibrary.class);
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(SundialsLibrary.JNA_LIBRARY_NAME, com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper.DEFAULT_OPTIONS);
	public static final SundialsLibrary INSTANCE = (SundialsLibrary)Native.loadLibrary(SundialsLibrary.JNA_LIBRARY_NAME, SundialsLibrary.class, com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper.DEFAULT_OPTIONS);
	public static final int PREC_NONE = (int)0;
	public static final int PREC_LEFT = (int)1;
	public static final int PREC_RIGHT = (int)2;
	public static final int PREC_BOTH = (int)3;
	/// <i>native declaration : include\sundials\sundials_spbcgs.h</i>
	public static final int SPBCG_PSET_FAIL_REC = (int)5;
	/// <i>native declaration : include\sundials\sundials_spbcgs.h</i>
	public static final int SPBCG_PSET_FAIL_UNREC = (int)-4;
	/// <i>native declaration : include\sundials\sundials_spgmr.h</i>
	public static final int SPGMR_PSET_FAIL_UNREC = (int)-6;
	/// <i>native declaration : include\sundials\sundials_spbcgs.h</i>
	public static final int SPBCG_MEM_NULL = (int)-1;
	/// <i>native declaration : include\sundials\sundials_spgmr.h</i>
	public static final int SPGMR_ATIMES_FAIL_UNREC = (int)-2;
	/// <i>native declaration : include\sundials\sundials_spbcgs.h</i>
	public static final int SPBCG_PSOLVE_FAIL_REC = (int)3;
	/// <i>native declaration : include\sundials\sundials_sptfqmr.h</i>
	public static final int SPTFQMR_PSOLVE_FAIL_UNREC = (int)-3;
	/// <i>native declaration : include\sundials\sundials_sptfqmr.h</i>
	public static final int SPTFQMR_PSET_FAIL_REC = (int)5;
	/// <i>native declaration : include\sundials\sundials_fnvector.h</i>
	public static final int FCMIX_KINSOL = (int)3;
	/// <i>native declaration : include\sundials\sundials_fnvector.h</i>
	public static final int FCMIX_IDA = (int)2;
	/// <i>native declaration : include\sundials\sundials_sptfqmr.h</i>
	public static final int SPTFQMR_PSOLVE_FAIL_REC = (int)3;
	/// <i>native declaration : include\sundials\sundials_spgmr.h</i>
	public static final int SPGMR_PSET_FAIL_REC = (int)6;
	/// <i>native declaration : include\sundials\sundials_spgmr.h</i>
	public static final int SPGMR_PSOLVE_FAIL_REC = (int)4;
	/// <i>native declaration : include\sundials\sundials_sptfqmr.h</i>
	public static final int SPTFQMR_ATIMES_FAIL_REC = (int)4;
	/// <i>native declaration : include\sundials\sundials_spgmr.h</i>
	public static final int SPGMR_SUCCESS = (int)0;
	/// <i>native declaration : include\sundials\sundials_config.h</i>
	public static final String SUNDIALS_PACKAGE_VERSION = (String)"2.4.0";
	/// <i>native declaration : include\sundials\sundials_sptfqmr.h</i>
	public static final int SPTFQMR_ATIMES_FAIL_UNREC = (int)-2;
	/// <i>native declaration : include\sundials\sundials_spbcgs.h</i>
	public static final int SPBCG_CONV_FAIL = (int)2;
	/// <i>native declaration : include\sundials\sundials_spbcgs.h</i>
	public static final int SPBCG_ATIMES_FAIL_REC = (int)4;
	/// <i>native declaration : include\sundials\sundials_spgmr.h</i>
	public static final int SPGMR_PSOLVE_FAIL_UNREC = (int)-3;
	/// <i>native declaration : include\sundials\sundials_sptfqmr.h</i>
	public static final int SPTFQMR_CONV_FAIL = (int)2;
	/// <i>native declaration : include\sundials\sundials_spgmr.h</i>
	public static final int SPGMR_GS_FAIL = (int)-4;
	/// <i>native declaration : include\sundials\sundials_sptfqmr.h</i>
	public static final int SPTFQMR_MEM_NULL = (int)-1;
	/// <i>native declaration : include\sundials\sundials_sptfqmr.h</i>
	public static final int SPTFQMR_SUCCESS = (int)0;
	/// <i>native declaration : include\sundials\sundials_fnvector.h</i>
	public static final int FCMIX_CVODE = (int)1;
	/// <i>native declaration : include\sundials\sundials_config.h</i>
	public static final int SUNDIALS_BLAS_LAPACK = (int)0;
	/// <i>native declaration : include\sundials\sundials_spgmr.h</i>
	public static final int SPGMR_QRFACT_FAIL = (int)3;
	/// <i>native declaration : include\sundials\sundials_config.h</i>
	public static final int SUNDIALS_DOUBLE_PRECISION = (int)1;
	/// <i>native declaration : include\sundials\sundials_spgmr.h</i>
	public static final int SPGMR_MEM_NULL = (int)-1;
	/// <i>native declaration : include\sundials\sundials_spgmr.h</i>
	public static final int SPGMR_RES_REDUCED = (int)1;
	/// <i>native declaration : include\sundials\sundials_spgmr.h</i>
	public static final int SPGMR_QRSOL_FAIL = (int)-5;
	/// <i>native declaration : include\sundials\sundials_spbcgs.h</i>
	public static final int SPBCG_PSOLVE_FAIL_UNREC = (int)-3;
	/// <i>native declaration : include\sundials\sundials_direct.h</i>
	public static final int SUNDIALS_DENSE = (int)1;
	/// <i>native declaration : include\sundials\sundials_spbcgs.h</i>
	public static final int SPBCG_SUCCESS = (int)0;
	/// <i>native declaration : include\sundials\sundials_types.h</i>
	public static final int FALSE = (int)0;
	/// <i>native declaration : include\sundials\sundials_spgmr.h</i>
	public static final int SPGMR_CONV_FAIL = (int)2;
	/// <i>native declaration : include\sundials\sundials_spbcgs.h</i>
	public static final int SPBCG_RES_REDUCED = (int)1;
	/// <i>native declaration : include\sundials\sundials_sptfqmr.h</i>
	public static final int SPTFQMR_PSET_FAIL_UNREC = (int)-4;
	/// <i>native declaration : include\sundials\sundials_direct.h</i>
	public static final int SUNDIALS_BAND = (int)2;
	/// <i>native declaration : include\sundials\sundials_spgmr.h</i>
	public static final int SPGMR_ATIMES_FAIL_REC = (int)5;
	/// <i>native declaration : include\sundials\sundials_types.h</i>
	public static final int TRUE = (int)1;
	/// <i>native declaration : include\sundials\sundials_sptfqmr.h</i>
	public static final int SPTFQMR_RES_REDUCED = (int)1;
	/// <i>native declaration : include\sundials\sundials_spbcgs.h</i>
	public static final int SPBCG_ATIMES_FAIL_UNREC = (int)-2;
	/// <i>native declaration : include\sundials\sundials_iterative.h</i>
	public interface ATimesFn extends Callback {
		int apply(Pointer A_data, _generic_N_Vector v, _generic_N_Vector z);
	};
	/// <i>native declaration : include\sundials\sundials_iterative.h</i>
	public interface PSolveFn extends Callback {
		int apply(Pointer P_data, _generic_N_Vector r, _generic_N_Vector z, int lr);
	};
	/**
	 * Original signature : <code>N_Vector N_VClone(N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:314</i>
	 */
	@Mangling({"_Z8N_VCloneP17_generic_N_Vector", "?N_VClone@@YAPA17_generic_N_VectorPA17_generic_N_Vector@Z"}) 
	_generic_N_Vector N_VClone(_generic_N_Vector w);
	/**
	 * Original signature : <code>N_Vector N_VCloneEmpty(N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:315</i>
	 */
	@Mangling({"_Z13N_VCloneEmptyP17_generic_N_Vector", "?N_VCloneEmpty@@YAPA17_generic_N_VectorPA17_generic_N_Vector@Z"}) 
	_generic_N_Vector N_VCloneEmpty(_generic_N_Vector w);
	/**
	 * Original signature : <code>void N_VDestroy(N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:316</i>
	 */
	@Mangling({"_Z10N_VDestroyP17_generic_N_Vector", "?N_VDestroy@@YAXPA17_generic_N_Vector@Z"}) 
	void N_VDestroy(_generic_N_Vector v);
	/**
	 * Original signature : <code>void N_VSpace(N_Vector, long int*, long int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:317</i><br>
	 * @deprecated use the safer methods {@link #N_VSpace(sundials._generic_N_Vector, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #N_VSpace(sundials._generic_N_Vector, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Mangling({"_Z8N_VSpaceP17_generic_N_VectorPlPl", "?N_VSpace@@YAXPA17_generic_N_VectorPAJPAJ@Z"}) 
	@Deprecated 
	void N_VSpace(_generic_N_Vector v, IntByReference lrw, IntByReference liw);
	/**
	 * Original signature : <code>void N_VSpace(N_Vector, long int*, long int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:317</i>
	 */
	@Mangling({"_Z8N_VSpaceP17_generic_N_VectorPlPl", "?N_VSpace@@YAXPA17_generic_N_VectorPAJPAJ@Z"}) 
	void N_VSpace(_generic_N_Vector v, IntBuffer lrw, IntBuffer liw);
	/**
	 * Original signature : <code>realtype* N_VGetArrayPointer(N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:318</i>
	 */
	@Mangling({"_Z18N_VGetArrayPointerP17_generic_N_Vector", "?N_VGetArrayPointer@@YAPANPA17_generic_N_Vector@Z"}) 
	DoubleByReference N_VGetArrayPointer(_generic_N_Vector v);
	/**
	 * Original signature : <code>void N_VSetArrayPointer(realtype*, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:319</i><br>
	 * @deprecated use the safer methods {@link #N_VSetArrayPointer(java.nio.DoubleBuffer, sundials._generic_N_Vector)} and {@link #N_VSetArrayPointer(com.sun.jna.ptr.DoubleByReference, sundials._generic_N_Vector)} instead
	 */
	@Mangling({"_Z18N_VSetArrayPointerPdP17_generic_N_Vector", "?N_VSetArrayPointer@@YAXPANPA17_generic_N_Vector@Z"}) 
	@Deprecated 
	void N_VSetArrayPointer(DoubleByReference v_data, _generic_N_Vector v);
	/**
	 * Original signature : <code>void N_VSetArrayPointer(realtype*, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:319</i>
	 */
	@Mangling({"_Z18N_VSetArrayPointerPdP17_generic_N_Vector", "?N_VSetArrayPointer@@YAXPANPA17_generic_N_Vector@Z"}) 
	void N_VSetArrayPointer(DoubleBuffer v_data, _generic_N_Vector v);
	/**
	 * Original signature : <code>void N_VLinearSum(realtype, N_Vector, realtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:320</i>
	 */
	@Mangling({"_Z12N_VLinearSumdP17_generic_N_VectordP17_generic_N_VectorP17_generic_N_Vector", "?N_VLinearSum@@YAXNPA17_generic_N_VectorNPA17_generic_N_VectorPA17_generic_N_Vector@Z"}) 
	void N_VLinearSum(double a, _generic_N_Vector x, double b, _generic_N_Vector y, _generic_N_Vector z);
	/**
	 * Original signature : <code>void N_VConst(realtype, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:321</i>
	 */
	@Mangling({"_Z8N_VConstdP17_generic_N_Vector", "?N_VConst@@YAXNPA17_generic_N_Vector@Z"}) 
	void N_VConst(double c, _generic_N_Vector z);
	/**
	 * Original signature : <code>void N_VProd(N_Vector, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:322</i>
	 */
	@Mangling({"_Z7N_VProdP17_generic_N_VectorP17_generic_N_VectorP17_generic_N_Vector", "?N_VProd@@YAXPA17_generic_N_VectorPA17_generic_N_VectorPA17_generic_N_Vector@Z"}) 
	void N_VProd(_generic_N_Vector x, _generic_N_Vector y, _generic_N_Vector z);
	/**
	 * Original signature : <code>void N_VDiv(N_Vector, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:323</i>
	 */
	@Mangling({"_Z6N_VDivP17_generic_N_VectorP17_generic_N_VectorP17_generic_N_Vector", "?N_VDiv@@YAXPA17_generic_N_VectorPA17_generic_N_VectorPA17_generic_N_Vector@Z"}) 
	void N_VDiv(_generic_N_Vector x, _generic_N_Vector y, _generic_N_Vector z);
	/**
	 * Original signature : <code>void N_VScale(realtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:324</i>
	 */
	@Mangling({"_Z8N_VScaledP17_generic_N_VectorP17_generic_N_Vector", "?N_VScale@@YAXNPA17_generic_N_VectorPA17_generic_N_Vector@Z"}) 
	void N_VScale(double c, _generic_N_Vector x, _generic_N_Vector z);
	/**
	 * Original signature : <code>void N_VAbs(N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:325</i>
	 */
	@Mangling({"_Z6N_VAbsP17_generic_N_VectorP17_generic_N_Vector", "?N_VAbs@@YAXPA17_generic_N_VectorPA17_generic_N_Vector@Z"}) 
	void N_VAbs(_generic_N_Vector x, _generic_N_Vector z);
	/**
	 * Original signature : <code>void N_VInv(N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:326</i>
	 */
	@Mangling({"_Z6N_VInvP17_generic_N_VectorP17_generic_N_Vector", "?N_VInv@@YAXPA17_generic_N_VectorPA17_generic_N_Vector@Z"}) 
	void N_VInv(_generic_N_Vector x, _generic_N_Vector z);
	/**
	 * Original signature : <code>void N_VAddConst(N_Vector, realtype, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:327</i>
	 */
	@Mangling({"_Z11N_VAddConstP17_generic_N_VectordP17_generic_N_Vector", "?N_VAddConst@@YAXPA17_generic_N_VectorNPA17_generic_N_Vector@Z"}) 
	void N_VAddConst(_generic_N_Vector x, double b, _generic_N_Vector z);
	/**
	 * Original signature : <code>realtype N_VDotProd(N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:328</i>
	 */
	@Mangling({"_Z10N_VDotProdP17_generic_N_VectorP17_generic_N_Vector", "?N_VDotProd@@YANPA17_generic_N_VectorPA17_generic_N_Vector@Z"}) 
	double N_VDotProd(_generic_N_Vector x, _generic_N_Vector y);
	/**
	 * Original signature : <code>realtype N_VMaxNorm(N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:329</i>
	 */
	@Mangling({"_Z10N_VMaxNormP17_generic_N_Vector", "?N_VMaxNorm@@YANPA17_generic_N_Vector@Z"}) 
	double N_VMaxNorm(_generic_N_Vector x);
	/**
	 * Original signature : <code>realtype N_VWrmsNorm(N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:330</i>
	 */
	@Mangling({"_Z11N_VWrmsNormP17_generic_N_VectorP17_generic_N_Vector", "?N_VWrmsNorm@@YANPA17_generic_N_VectorPA17_generic_N_Vector@Z"}) 
	double N_VWrmsNorm(_generic_N_Vector x, _generic_N_Vector w);
	/**
	 * Original signature : <code>realtype N_VWrmsNormMask(N_Vector, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:331</i>
	 */
	@Mangling({"_Z15N_VWrmsNormMaskP17_generic_N_VectorP17_generic_N_VectorP17_generic_N_Vector", "?N_VWrmsNormMask@@YANPA17_generic_N_VectorPA17_generic_N_VectorPA17_generic_N_Vector@Z"}) 
	double N_VWrmsNormMask(_generic_N_Vector x, _generic_N_Vector w, _generic_N_Vector id);
	/**
	 * Original signature : <code>realtype N_VMin(N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:332</i>
	 */
	@Mangling({"_Z6N_VMinP17_generic_N_Vector", "?N_VMin@@YANPA17_generic_N_Vector@Z"}) 
	double N_VMin(_generic_N_Vector x);
	/**
	 * Original signature : <code>realtype N_VWL2Norm(N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:333</i>
	 */
	@Mangling({"_Z10N_VWL2NormP17_generic_N_VectorP17_generic_N_Vector", "?N_VWL2Norm@@YANPA17_generic_N_VectorPA17_generic_N_Vector@Z"}) 
	double N_VWL2Norm(_generic_N_Vector x, _generic_N_Vector w);
	/**
	 * Original signature : <code>realtype N_VL1Norm(N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:334</i>
	 */
	@Mangling({"_Z9N_VL1NormP17_generic_N_Vector", "?N_VL1Norm@@YANPA17_generic_N_Vector@Z"}) 
	double N_VL1Norm(_generic_N_Vector x);
	/**
	 * Original signature : <code>void N_VCompare(realtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:335</i>
	 */
	@Mangling({"_Z10N_VComparedP17_generic_N_VectorP17_generic_N_Vector", "?N_VCompare@@YAXNPA17_generic_N_VectorPA17_generic_N_Vector@Z"}) 
	void N_VCompare(double c, _generic_N_Vector x, _generic_N_Vector z);
	/**
	 * Original signature : <code>int N_VInvTest(N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:336</i>
	 */
	@Mangling({"_Z10N_VInvTestP17_generic_N_VectorP17_generic_N_Vector", "?N_VInvTest@@YAHPA17_generic_N_VectorPA17_generic_N_Vector@Z"}) 
	int N_VInvTest(_generic_N_Vector x, _generic_N_Vector z);
	/**
	 * Original signature : <code>int N_VConstrMask(N_Vector, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:337</i>
	 */
	@Mangling({"_Z13N_VConstrMaskP17_generic_N_VectorP17_generic_N_VectorP17_generic_N_Vector", "?N_VConstrMask@@YAHPA17_generic_N_VectorPA17_generic_N_VectorPA17_generic_N_Vector@Z"}) 
	int N_VConstrMask(_generic_N_Vector c, _generic_N_Vector x, _generic_N_Vector m);
	/**
	 * Original signature : <code>realtype N_VMinQuotient(N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:338</i>
	 */
	@Mangling({"_Z14N_VMinQuotientP17_generic_N_VectorP17_generic_N_Vector", "?N_VMinQuotient@@YANPA17_generic_N_VectorPA17_generic_N_Vector@Z"}) 
	double N_VMinQuotient(_generic_N_Vector num, _generic_N_Vector denom);
	/**
	 * Original signature : <code>N_Vector* N_VCloneEmptyVectorArray(int, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:363</i>
	 */
	@Mangling({"_Z24N_VCloneEmptyVectorArrayiP17_generic_N_Vector", "?N_VCloneEmptyVectorArray@@YAPAPA17_generic_N_VectorHPA17_generic_N_Vector@Z"}) 
	_generic_N_Vector.ByReference[] N_VCloneEmptyVectorArray(int count, _generic_N_Vector w);
	/**
	 * Original signature : <code>N_Vector* N_VCloneVectorArray(int, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:364</i>
	 */
	@Mangling({"_Z19N_VCloneVectorArrayiP17_generic_N_Vector", "?N_VCloneVectorArray@@YAPAPA17_generic_N_VectorHPA17_generic_N_Vector@Z"}) 
	_generic_N_Vector.ByReference[] N_VCloneVectorArray(int count, _generic_N_Vector w);
	/**
	 * Original signature : <code>void N_VDestroyVectorArray(N_Vector*, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:365</i><br>
	 * @deprecated use the safer method {@link #N_VDestroyVectorArray(sundials._generic_N_Vector.ByReference[], int)} instead
	 */
	@Mangling({"_Z21N_VDestroyVectorArrayPP17_generic_N_Vectori", "?N_VDestroyVectorArray@@YAXPAPA17_generic_N_VectorH@Z"}) 
	@Deprecated 
	void N_VDestroyVectorArray(PointerByReference vs, int count);
	/**
	 * Original signature : <code>void N_VDestroyVectorArray(N_Vector*, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_nvector.h:365</i>
	 */
	@Mangling({"_Z21N_VDestroyVectorArrayPP17_generic_N_Vectori", "?N_VDestroyVectorArray@@YAXPAPA17_generic_N_VectorH@Z"}) 
	void N_VDestroyVectorArray(_generic_N_Vector.ByReference vs[], int count);
	/**
	 * Original signature : <code>DlsMat NewDenseMat(int, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_direct.h:195</i>
	 */
	@Mangling({"_Z11NewDenseMatii", "?NewDenseMat@@YAPA7_DlsMatHH@Z"}) 
	_DlsMat NewDenseMat(int M, int N);
	/**
	 * Original signature : <code>DlsMat NewBandMat(int, int, int, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_direct.h:217</i>
	 */
	@Mangling({"_Z10NewBandMatiiii", "?NewBandMat@@YAPA7_DlsMatHHHH@Z"}) 
	_DlsMat NewBandMat(int N, int mu, int ml, int smu);
	/**
	 * Original signature : <code>void DestroyMat(DlsMat)</code><br>
	 * <i>native declaration : include\sundials\sundials_direct.h:227</i>
	 */
	@Mangling({"_Z10DestroyMatP7_DlsMat", "?DestroyMat@@YAXPA7_DlsMat@Z"}) 
	void DestroyMat(_DlsMat A);
	/**
	 * Original signature : <code>int* NewIntArray(int)</code><br>
	 * <i>native declaration : include\sundials\sundials_direct.h:239</i>
	 */
	@Mangling({"_Z11NewIntArrayi", "?NewIntArray@@YAPAHH@Z"}) 
	IntByReference NewIntArray(int N);
	/**
	 * Original signature : <code>realtype* NewRealArray(int)</code><br>
	 * <i>native declaration : include\sundials\sundials_direct.h:251</i>
	 */
	@Mangling({"_Z12NewRealArrayi", "?NewRealArray@@YAPANH@Z"}) 
	DoubleByReference NewRealArray(int N);
	/**
	 * Original signature : <code>void DestroyArray(void*)</code><br>
	 * <i>native declaration : include\sundials\sundials_direct.h:262</i>
	 */
	@Mangling({"_Z12DestroyArrayPv", "?DestroyArray@@YAXPAX@Z"}) 
	void DestroyArray(Pointer p);
	/**
	 * Original signature : <code>void AddIdentity(DlsMat)</code><br>
	 * <i>native declaration : include\sundials\sundials_direct.h:276</i>
	 */
	@Mangling({"_Z11AddIdentityP7_DlsMat", "?AddIdentity@@YAXPA7_DlsMat@Z"}) 
	void AddIdentity(_DlsMat A);
	/**
	 * Original signature : <code>void SetToZero(DlsMat)</code><br>
	 * <i>native declaration : include\sundials\sundials_direct.h:286</i>
	 */
	@Mangling({"_Z9SetToZeroP7_DlsMat", "?SetToZero@@YAXPA7_DlsMat@Z"}) 
	void SetToZero(_DlsMat A);
	/**
	 * Original signature : <code>void PrintMat(DlsMat)</code><br>
	 * <i>native declaration : include\sundials\sundials_direct.h:300</i>
	 */
	@Mangling({"_Z8PrintMatP7_DlsMat", "?PrintMat@@YAXPA7_DlsMat@Z"}) 
	void PrintMat(_DlsMat A);
	/**
	 * Original signature : <code>realtype** newDenseMat(int, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_direct.h:309</i>
	 */
	@Mangling({"_Z11newDenseMatii", "?newDenseMat@@YAPAPANHH@Z"}) 
	PointerByReference newDenseMat(int m, int n);
	/**
	 * Original signature : <code>realtype** newBandMat(int, int, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_direct.h:310</i>
	 */
	@Mangling({"_Z10newBandMatiii", "?newBandMat@@YAPAPANHHH@Z"}) 
	PointerByReference newBandMat(int n, int smu, int ml);
	/**
	 * Original signature : <code>void destroyMat(realtype**)</code><br>
	 * <i>native declaration : include\sundials\sundials_direct.h:311</i>
	 */
	@Mangling({"_Z10destroyMatPPd", "?destroyMat@@YAXPAPAN@Z"}) 
	void destroyMat(PointerByReference a);
	/**
	 * Original signature : <code>int* newIntArray(int)</code><br>
	 * <i>native declaration : include\sundials\sundials_direct.h:312</i>
	 */
	@Mangling({"_Z11newIntArrayi", "?newIntArray@@YAPAHH@Z"}) 
	IntByReference newIntArray(int n);
	/**
	 * Original signature : <code>realtype* newRealArray(int)</code><br>
	 * <i>native declaration : include\sundials\sundials_direct.h:313</i>
	 */
	@Mangling({"_Z12newRealArrayi", "?newRealArray@@YAPANH@Z"}) 
	DoubleByReference newRealArray(int m);
	/**
	 * Original signature : <code>void destroyArray(void*)</code><br>
	 * <i>native declaration : include\sundials\sundials_direct.h:314</i>
	 */
	@Mangling({"_Z12destroyArrayPv", "?destroyArray@@YAXPAX@Z"}) 
	void destroyArray(Pointer v);
	/**
	 * Original signature : <code>int BandGBTRF(DlsMat, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_band.h:77</i><br>
	 * @deprecated use the safer methods {@link #BandGBTRF(sundials._DlsMat, java.nio.IntBuffer)} and {@link #BandGBTRF(sundials._DlsMat, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Mangling({"_Z9BandGBTRFP7_DlsMatPi", "?BandGBTRF@@YAHPA7_DlsMatPAH@Z"}) 
	@Deprecated 
	int BandGBTRF(_DlsMat A, IntByReference p);
	/**
	 * Original signature : <code>int BandGBTRF(DlsMat, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_band.h:77</i>
	 */
	@Mangling({"_Z9BandGBTRFP7_DlsMatPi", "?BandGBTRF@@YAHPA7_DlsMatPAH@Z"}) 
	int BandGBTRF(_DlsMat A, IntBuffer p);
	/**
	 * Original signature : <code>int bandGBTRF(realtype**, int, int, int, int, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_band.h:78</i><br>
	 * @deprecated use the safer methods {@link #bandGBTRF(com.sun.jna.ptr.PointerByReference, int, int, int, int, java.nio.IntBuffer)} and {@link #bandGBTRF(com.sun.jna.ptr.PointerByReference, int, int, int, int, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Mangling({"_Z9bandGBTRFPPdiiiiPi", "?bandGBTRF@@YAHPAPANHHHHPAH@Z"}) 
	@Deprecated 
	int bandGBTRF(PointerByReference a, int n, int mu, int ml, int smu, IntByReference p);
	/**
	 * Original signature : <code>int bandGBTRF(realtype**, int, int, int, int, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_band.h:78</i>
	 */
	@Mangling({"_Z9bandGBTRFPPdiiiiPi", "?bandGBTRF@@YAHPAPANHHHHPAH@Z"}) 
	int bandGBTRF(PointerByReference a, int n, int mu, int ml, int smu, IntBuffer p);
	/**
	 * Original signature : <code>void BandGBTRS(DlsMat, int*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_band.h:97</i><br>
	 * @deprecated use the safer methods {@link #BandGBTRS(sundials._DlsMat, java.nio.IntBuffer, java.nio.DoubleBuffer)} and {@link #BandGBTRS(sundials._DlsMat, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Mangling({"_Z9BandGBTRSP7_DlsMatPiPd", "?BandGBTRS@@YAXPA7_DlsMatPAHPAN@Z"}) 
	@Deprecated 
	void BandGBTRS(_DlsMat A, IntByReference p, DoubleByReference b);
	/**
	 * Original signature : <code>void BandGBTRS(DlsMat, int*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_band.h:97</i>
	 */
	@Mangling({"_Z9BandGBTRSP7_DlsMatPiPd", "?BandGBTRS@@YAXPA7_DlsMatPAHPAN@Z"}) 
	void BandGBTRS(_DlsMat A, IntBuffer p, DoubleBuffer b);
	/**
	 * Original signature : <code>void bandGBTRS(realtype**, int, int, int, int*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_band.h:98</i><br>
	 * @deprecated use the safer methods {@link #bandGBTRS(com.sun.jna.ptr.PointerByReference, int, int, int, java.nio.IntBuffer, java.nio.DoubleBuffer)} and {@link #bandGBTRS(com.sun.jna.ptr.PointerByReference, int, int, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Mangling({"_Z9bandGBTRSPPdiiiPiPd", "?bandGBTRS@@YAXPAPANHHHPAHPAN@Z"}) 
	@Deprecated 
	void bandGBTRS(PointerByReference a, int n, int smu, int ml, IntByReference p, DoubleByReference b);
	/**
	 * Original signature : <code>void bandGBTRS(realtype**, int, int, int, int*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_band.h:98</i>
	 */
	@Mangling({"_Z9bandGBTRSPPdiiiPiPd", "?bandGBTRS@@YAXPAPANHHHPAHPAN@Z"}) 
	void bandGBTRS(PointerByReference a, int n, int smu, int ml, IntBuffer p, DoubleBuffer b);
	/**
	 * Original signature : <code>void BandCopy(DlsMat, DlsMat, int, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_band.h:115</i>
	 */
	@Mangling({"_Z8BandCopyP7_DlsMatP7_DlsMatii", "?BandCopy@@YAXPA7_DlsMatPA7_DlsMatHH@Z"}) 
	void BandCopy(_DlsMat A, _DlsMat B, int copymu, int copyml);
	/**
	 * Original signature : <code>void bandCopy(realtype**, realtype**, int, int, int, int, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_band.h:116</i>
	 */
	@Mangling({"_Z8bandCopyPPdPPdiiiii", "?bandCopy@@YAXPAPANPAPANHHHHH@Z"}) 
	void bandCopy(PointerByReference a, PointerByReference b, int n, int a_smu, int b_smu, int copymu, int copyml);
	/**
	 * Original signature : <code>void BandScale(realtype, DlsMat)</code><br>
	 * <i>native declaration : include\sundials\sundials_band.h:133</i>
	 */
	@Mangling({"_Z9BandScaledP7_DlsMat", "?BandScale@@YAXNPA7_DlsMat@Z"}) 
	void BandScale(double c, _DlsMat A);
	/**
	 * Original signature : <code>void bandScale(realtype, realtype**, int, int, int, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_band.h:134</i>
	 */
	@Mangling({"_Z9bandScaledPPdiiii", "?bandScale@@YAXNPAPANHHHH@Z"}) 
	void bandScale(double c, PointerByReference a, int n, int mu, int ml, int smu);
	/**
	 * Original signature : <code>void bandAddIdentity(realtype**, int, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_band.h:145</i>
	 */
	@Mangling({"_Z15bandAddIdentityPPdii", "?bandAddIdentity@@YAXPAPANHH@Z"}) 
	void bandAddIdentity(PointerByReference a, int n, int smu);
	/**
	 * Original signature : <code>int DenseGETRF(DlsMat, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:74</i><br>
	 * @deprecated use the safer methods {@link #DenseGETRF(sundials._DlsMat, java.nio.IntBuffer)} and {@link #DenseGETRF(sundials._DlsMat, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Mangling({"_Z10DenseGETRFP7_DlsMatPi", "?DenseGETRF@@YAHPA7_DlsMatPAH@Z"}) 
	@Deprecated 
	int DenseGETRF(_DlsMat A, IntByReference p);
	/**
	 * Original signature : <code>int DenseGETRF(DlsMat, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:74</i>
	 */
	@Mangling({"_Z10DenseGETRFP7_DlsMatPi", "?DenseGETRF@@YAHPA7_DlsMatPAH@Z"}) 
	int DenseGETRF(_DlsMat A, IntBuffer p);
	/**
	 * Original signature : <code>void DenseGETRS(DlsMat, int*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:75</i><br>
	 * @deprecated use the safer methods {@link #DenseGETRS(sundials._DlsMat, java.nio.IntBuffer, java.nio.DoubleBuffer)} and {@link #DenseGETRS(sundials._DlsMat, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Mangling({"_Z10DenseGETRSP7_DlsMatPiPd", "?DenseGETRS@@YAXPA7_DlsMatPAHPAN@Z"}) 
	@Deprecated 
	void DenseGETRS(_DlsMat A, IntByReference p, DoubleByReference b);
	/**
	 * Original signature : <code>void DenseGETRS(DlsMat, int*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:75</i>
	 */
	@Mangling({"_Z10DenseGETRSP7_DlsMatPiPd", "?DenseGETRS@@YAXPA7_DlsMatPAHPAN@Z"}) 
	void DenseGETRS(_DlsMat A, IntBuffer p, DoubleBuffer b);
	/**
	 * Original signature : <code>int denseGETRF(realtype**, int, int, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:77</i><br>
	 * @deprecated use the safer methods {@link #denseGETRF(com.sun.jna.ptr.PointerByReference, int, int, java.nio.IntBuffer)} and {@link #denseGETRF(com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Mangling({"_Z10denseGETRFPPdiiPi", "?denseGETRF@@YAHPAPANHHPAH@Z"}) 
	@Deprecated 
	int denseGETRF(PointerByReference a, int m, int n, IntByReference p);
	/**
	 * Original signature : <code>int denseGETRF(realtype**, int, int, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:77</i>
	 */
	@Mangling({"_Z10denseGETRFPPdiiPi", "?denseGETRF@@YAHPAPANHHPAH@Z"}) 
	int denseGETRF(PointerByReference a, int m, int n, IntBuffer p);
	/**
	 * Original signature : <code>void denseGETRS(realtype**, int, int*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:78</i><br>
	 * @deprecated use the safer methods {@link #denseGETRS(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.DoubleBuffer)} and {@link #denseGETRS(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Mangling({"_Z10denseGETRSPPdiPiPd", "?denseGETRS@@YAXPAPANHPAHPAN@Z"}) 
	@Deprecated 
	void denseGETRS(PointerByReference a, int n, IntByReference p, DoubleByReference b);
	/**
	 * Original signature : <code>void denseGETRS(realtype**, int, int*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:78</i>
	 */
	@Mangling({"_Z10denseGETRSPPdiPiPd", "?denseGETRS@@YAXPAPANHPAHPAN@Z"}) 
	void denseGETRS(PointerByReference a, int n, IntBuffer p, DoubleBuffer b);
	/**
	 * Original signature : <code>int DensePOTRF(DlsMat)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:98</i>
	 */
	@Mangling({"_Z10DensePOTRFP7_DlsMat", "?DensePOTRF@@YAHPA7_DlsMat@Z"}) 
	int DensePOTRF(_DlsMat A);
	/**
	 * Original signature : <code>void DensePOTRS(DlsMat, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:99</i><br>
	 * @deprecated use the safer methods {@link #DensePOTRS(sundials._DlsMat, java.nio.DoubleBuffer)} and {@link #DensePOTRS(sundials._DlsMat, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Mangling({"_Z10DensePOTRSP7_DlsMatPd", "?DensePOTRS@@YAXPA7_DlsMatPAN@Z"}) 
	@Deprecated 
	void DensePOTRS(_DlsMat A, DoubleByReference b);
	/**
	 * Original signature : <code>void DensePOTRS(DlsMat, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:99</i>
	 */
	@Mangling({"_Z10DensePOTRSP7_DlsMatPd", "?DensePOTRS@@YAXPA7_DlsMatPAN@Z"}) 
	void DensePOTRS(_DlsMat A, DoubleBuffer b);
	/**
	 * Original signature : <code>int densePOTRF(realtype**, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:101</i>
	 */
	@Mangling({"_Z10densePOTRFPPdi", "?densePOTRF@@YAHPAPANH@Z"}) 
	int densePOTRF(PointerByReference a, int m);
	/**
	 * Original signature : <code>void densePOTRS(realtype**, int, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:102</i><br>
	 * @deprecated use the safer methods {@link #densePOTRS(com.sun.jna.ptr.PointerByReference, int, java.nio.DoubleBuffer)} and {@link #densePOTRS(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Mangling({"_Z10densePOTRSPPdiPd", "?densePOTRS@@YAXPAPANHPAN@Z"}) 
	@Deprecated 
	void densePOTRS(PointerByReference a, int m, DoubleByReference b);
	/**
	 * Original signature : <code>void densePOTRS(realtype**, int, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:102</i>
	 */
	@Mangling({"_Z10densePOTRSPPdiPd", "?densePOTRS@@YAXPAPANHPAN@Z"}) 
	void densePOTRS(PointerByReference a, int m, DoubleBuffer b);
	/**
	 * Original signature : <code>int DenseGEQRF(DlsMat, realtype*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:130</i><br>
	 * @deprecated use the safer methods {@link #DenseGEQRF(sundials._DlsMat, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #DenseGEQRF(sundials._DlsMat, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Mangling({"_Z10DenseGEQRFP7_DlsMatPdPd", "?DenseGEQRF@@YAHPA7_DlsMatPANPAN@Z"}) 
	@Deprecated 
	int DenseGEQRF(_DlsMat A, DoubleByReference beta, DoubleByReference wrk);
	/**
	 * Original signature : <code>int DenseGEQRF(DlsMat, realtype*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:130</i>
	 */
	@Mangling({"_Z10DenseGEQRFP7_DlsMatPdPd", "?DenseGEQRF@@YAHPA7_DlsMatPANPAN@Z"}) 
	int DenseGEQRF(_DlsMat A, DoubleBuffer beta, DoubleBuffer wrk);
	/**
	 * Original signature : <code>int DenseORMQR(DlsMat, realtype*, realtype*, realtype*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:131</i><br>
	 * @deprecated use the safer methods {@link #DenseORMQR(sundials._DlsMat, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #DenseORMQR(sundials._DlsMat, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Mangling({"_Z10DenseORMQRP7_DlsMatPdPdPdPd", "?DenseORMQR@@YAHPA7_DlsMatPANPANPANPAN@Z"}) 
	@Deprecated 
	int DenseORMQR(_DlsMat A, DoubleByReference beta, DoubleByReference vn, DoubleByReference vm, DoubleByReference wrk);
	/**
	 * Original signature : <code>int DenseORMQR(DlsMat, realtype*, realtype*, realtype*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:131</i>
	 */
	@Mangling({"_Z10DenseORMQRP7_DlsMatPdPdPdPd", "?DenseORMQR@@YAHPA7_DlsMatPANPANPANPAN@Z"}) 
	int DenseORMQR(_DlsMat A, DoubleBuffer beta, DoubleBuffer vn, DoubleBuffer vm, DoubleBuffer wrk);
	/**
	 * Original signature : <code>int denseGEQRF(realtype**, int, int, realtype*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:134</i><br>
	 * @deprecated use the safer methods {@link #denseGEQRF(com.sun.jna.ptr.PointerByReference, int, int, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #denseGEQRF(com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Mangling({"_Z10denseGEQRFPPdiiPdPd", "?denseGEQRF@@YAHPAPANHHPANPAN@Z"}) 
	@Deprecated 
	int denseGEQRF(PointerByReference a, int m, int n, DoubleByReference beta, DoubleByReference v);
	/**
	 * Original signature : <code>int denseGEQRF(realtype**, int, int, realtype*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:134</i>
	 */
	@Mangling({"_Z10denseGEQRFPPdiiPdPd", "?denseGEQRF@@YAHPAPANHHPANPAN@Z"}) 
	int denseGEQRF(PointerByReference a, int m, int n, DoubleBuffer beta, DoubleBuffer v);
	/**
	 * Original signature : <code>int denseORMQR(realtype**, int, int, realtype*, realtype*, realtype*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:135</i><br>
	 * @deprecated use the safer methods {@link #denseORMQR(com.sun.jna.ptr.PointerByReference, int, int, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #denseORMQR(com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Mangling({"_Z10denseORMQRPPdiiPdPdPdPd", "?denseORMQR@@YAHPAPANHHPANPANPANPAN@Z"}) 
	@Deprecated 
	int denseORMQR(PointerByReference a, int m, int n, DoubleByReference beta, DoubleByReference v, DoubleByReference w, DoubleByReference wrk);
	/**
	 * Original signature : <code>int denseORMQR(realtype**, int, int, realtype*, realtype*, realtype*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:135</i>
	 */
	@Mangling({"_Z10denseORMQRPPdiiPdPdPdPd", "?denseORMQR@@YAHPAPANHHPANPANPANPAN@Z"}) 
	int denseORMQR(PointerByReference a, int m, int n, DoubleBuffer beta, DoubleBuffer v, DoubleBuffer w, DoubleBuffer wrk);
	/**
	 * Original signature : <code>void DenseCopy(DlsMat, DlsMat)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:150</i>
	 */
	@Mangling({"_Z9DenseCopyP7_DlsMatP7_DlsMat", "?DenseCopy@@YAXPA7_DlsMatPA7_DlsMat@Z"}) 
	void DenseCopy(_DlsMat A, _DlsMat B);
	/**
	 * Original signature : <code>void denseCopy(realtype**, realtype**, int, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:151</i>
	 */
	@Mangling({"_Z9denseCopyPPdPPdii", "?denseCopy@@YAXPAPANPAPANHH@Z"}) 
	void denseCopy(PointerByReference a, PointerByReference b, int m, int n);
	/**
	 * Original signature : <code>void DenseScale(realtype, DlsMat)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:166</i>
	 */
	@Mangling({"_Z10DenseScaledP7_DlsMat", "?DenseScale@@YAXNPA7_DlsMat@Z"}) 
	void DenseScale(double c, _DlsMat A);
	/**
	 * Original signature : <code>void denseScale(realtype, realtype**, int, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:167</i>
	 */
	@Mangling({"_Z10denseScaledPPdii", "?denseScale@@YAXNPAPANHH@Z"}) 
	void denseScale(double c, PointerByReference a, int m, int n);
	/**
	 * Original signature : <code>void denseAddIdentity(realtype**, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_dense.h:179</i>
	 */
	@Mangling({"_Z16denseAddIdentityPPdi", "?denseAddIdentity@@YAXPAPANH@Z"}) 
	void denseAddIdentity(PointerByReference a, int n);
	/**
	 * Original signature : <code>int ModifiedGS(N_Vector*, realtype**, int, int, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_iterative.h:142</i><br>
	 * @deprecated use the safer methods {@link #ModifiedGS(sundials._generic_N_Vector.ByReference[], com.sun.jna.ptr.PointerByReference, int, int, java.nio.DoubleBuffer)} and {@link #ModifiedGS(sundials._generic_N_Vector.ByReference[], com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Mangling({"_Z10ModifiedGSPP17_generic_N_VectorPPdiiPd", "?ModifiedGS@@YAHPAPA17_generic_N_VectorPAPANHHPAN@Z"}) 
	@Deprecated 
	int ModifiedGS(PointerByReference v, PointerByReference h, int k, int p, DoubleByReference new_vk_norm);
	/**
	 * Original signature : <code>int ModifiedGS(N_Vector*, realtype**, int, int, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_iterative.h:142</i>
	 */
	@Mangling({"_Z10ModifiedGSPP17_generic_N_VectorPPdiiPd", "?ModifiedGS@@YAHPAPA17_generic_N_VectorPAPANHHPAN@Z"}) 
	int ModifiedGS(_generic_N_Vector.ByReference v[], PointerByReference h, int k, int p, DoubleBuffer new_vk_norm);
	/**
	 * Original signature : <code>int ModifiedGS(N_Vector*, realtype**, int, int, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_iterative.h:142</i>
	 */
	@Mangling({"_Z10ModifiedGSPP17_generic_N_VectorPPdiiPd", "?ModifiedGS@@YAHPAPA17_generic_N_VectorPAPANHHPAN@Z"}) 
	int ModifiedGS(_generic_N_Vector.ByReference v[], PointerByReference h, int k, int p, DoubleByReference new_vk_norm);
	/**
	 * Original signature : <code>int ClassicalGS(N_Vector*, realtype**, int, int, realtype*, N_Vector, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_iterative.h:165</i><br>
	 * @deprecated use the safer methods {@link #ClassicalGS(sundials._generic_N_Vector.ByReference[], com.sun.jna.ptr.PointerByReference, int, int, java.nio.DoubleBuffer, sundials._generic_N_Vector, java.nio.DoubleBuffer)} and {@link #ClassicalGS(sundials._generic_N_Vector.ByReference[], com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.ptr.DoubleByReference, sundials._generic_N_Vector, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Mangling({"_Z11ClassicalGSPP17_generic_N_VectorPPdiiPdP17_generic_N_VectorPd", "?ClassicalGS@@YAHPAPA17_generic_N_VectorPAPANHHPANPA17_generic_N_VectorPAN@Z"}) 
	@Deprecated 
	int ClassicalGS(PointerByReference v, PointerByReference h, int k, int p, DoubleByReference new_vk_norm, _generic_N_Vector temp, DoubleByReference s);
	/**
	 * Original signature : <code>int ClassicalGS(N_Vector*, realtype**, int, int, realtype*, N_Vector, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_iterative.h:165</i>
	 */
	@Mangling({"_Z11ClassicalGSPP17_generic_N_VectorPPdiiPdP17_generic_N_VectorPd", "?ClassicalGS@@YAHPAPA17_generic_N_VectorPAPANHHPANPA17_generic_N_VectorPAN@Z"}) 
	int ClassicalGS(_generic_N_Vector.ByReference v[], PointerByReference h, int k, int p, DoubleBuffer new_vk_norm, _generic_N_Vector temp, DoubleBuffer s);
	/**
	 * Original signature : <code>int ClassicalGS(N_Vector*, realtype**, int, int, realtype*, N_Vector, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_iterative.h:165</i>
	 */
	@Mangling({"_Z11ClassicalGSPP17_generic_N_VectorPPdiiPdP17_generic_N_VectorPd", "?ClassicalGS@@YAHPAPA17_generic_N_VectorPAPANHHPANPA17_generic_N_VectorPAN@Z"}) 
	int ClassicalGS(_generic_N_Vector.ByReference v[], PointerByReference h, int k, int p, DoubleByReference new_vk_norm, _generic_N_Vector temp, DoubleByReference s);
	/**
	 * Original signature : <code>int QRfact(int, realtype**, realtype*, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_iterative.h:200</i><br>
	 * @deprecated use the safer methods {@link #QRfact(int, com.sun.jna.ptr.PointerByReference, java.nio.DoubleBuffer, int)} and {@link #QRfact(int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.DoubleByReference, int)} instead
	 */
	@Mangling({"_Z6QRfactiPPdPdi", "?QRfact@@YAHHPAPANPANH@Z"}) 
	@Deprecated 
	int QRfact(int n, PointerByReference h, DoubleByReference q, int job);
	/**
	 * Original signature : <code>int QRfact(int, realtype**, realtype*, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_iterative.h:200</i>
	 */
	@Mangling({"_Z6QRfactiPPdPdi", "?QRfact@@YAHHPAPANPANH@Z"}) 
	int QRfact(int n, PointerByReference h, DoubleBuffer q, int job);
	/**
	 * Original signature : <code>int QRsol(int, realtype**, realtype*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_iterative.h:234</i><br>
	 * @deprecated use the safer methods {@link #QRsol(int, com.sun.jna.ptr.PointerByReference, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #QRsol(int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Mangling({"_Z5QRsoliPPdPdPd", "?QRsol@@YAHHPAPANPANPAN@Z"}) 
	@Deprecated 
	int QRsol(int n, PointerByReference h, DoubleByReference q, DoubleByReference b);
	/**
	 * Original signature : <code>int QRsol(int, realtype**, realtype*, realtype*)</code><br>
	 * <i>native declaration : include\sundials\sundials_iterative.h:234</i>
	 */
	@Mangling({"_Z5QRsoliPPdPdPd", "?QRsol@@YAHHPAPANPANPAN@Z"}) 
	int QRsol(int n, PointerByReference h, DoubleBuffer q, DoubleBuffer b);
	/**
	 * Original signature : <code>void dcopy_(int*, const double*, const int*, double*, const int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:71</i><br>
	 * @deprecated use the safer methods {@link #dcopy_(java.nio.IntBuffer, double[], int[], java.nio.DoubleBuffer, int[])} and {@link #dcopy_(com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	void dcopy_(IntByReference n, DoubleByReference x, IntByReference inc_x, DoubleByReference y, IntByReference inc_y);
	/**
	 * Original signature : <code>void dcopy_(int*, const double*, const int*, double*, const int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:71</i>
	 */
	void dcopy_(IntBuffer n, double x[], int inc_x[], DoubleBuffer y, int inc_y[]);
	/**
	 * Original signature : <code>void dscal_(int*, const double*, double*, const int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:72</i><br>
	 * @deprecated use the safer methods {@link #dscal_(java.nio.IntBuffer, double[], java.nio.DoubleBuffer, int[])} and {@link #dscal_(com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	void dscal_(IntByReference n, DoubleByReference alpha, DoubleByReference x, IntByReference inc_x);
	/**
	 * Original signature : <code>void dscal_(int*, const double*, double*, const int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:72</i>
	 */
	void dscal_(IntBuffer n, double alpha[], DoubleBuffer x, int inc_x[]);
	/**
	 * Original signature : <code>void dgemv_(const char*, int*, int*, const double*, const double*, int*, const double*, int*, const double*, double*, int*, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:76</i><br>
	 * @deprecated use the safer methods {@link #dgemv_(java.lang.String, java.nio.IntBuffer, java.nio.IntBuffer, double[], double[], java.nio.IntBuffer, double[], java.nio.IntBuffer, double[], java.nio.DoubleBuffer, java.nio.IntBuffer, int)} and {@link #dgemv_(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, int)} instead
	 */
	@Deprecated 
	void dgemv_(Pointer trans, IntByReference m, IntByReference n, DoubleByReference alpha, DoubleByReference a, IntByReference lda, DoubleByReference x, IntByReference inc_x, DoubleByReference beta, DoubleByReference y, IntByReference inc_y, int len_trans);
	/**
	 * Original signature : <code>void dgemv_(const char*, int*, int*, const double*, const double*, int*, const double*, int*, const double*, double*, int*, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:76</i>
	 */
	void dgemv_(String trans, IntBuffer m, IntBuffer n, double alpha[], double a[], IntBuffer lda, double x[], IntBuffer inc_x, double beta[], DoubleBuffer y, IntBuffer inc_y, int len_trans);
	/**
	 * Original signature : <code>void dtrsv_(const char*, const char*, const char*, const int*, const double*, const int*, double*, const int*, int, int, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:80</i><br>
	 * @deprecated use the safer methods {@link #dtrsv_(java.lang.String, java.lang.String, java.lang.String, int[], double[], int[], java.nio.DoubleBuffer, int[], int, int, int)} and {@link #dtrsv_(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, int, int, int)} instead
	 */
	@Deprecated 
	void dtrsv_(Pointer uplo, Pointer trans, Pointer diag, IntByReference n, DoubleByReference a, IntByReference lda, DoubleByReference x, IntByReference inc_x, int len_uplo, int len_trans, int len_diag);
	/**
	 * Original signature : <code>void dtrsv_(const char*, const char*, const char*, const int*, const double*, const int*, double*, const int*, int, int, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:80</i>
	 */
	void dtrsv_(String uplo, String trans, String diag, int n[], double a[], int lda[], DoubleBuffer x, int inc_x[], int len_uplo, int len_trans, int len_diag);
	/**
	 * Original signature : <code>void dsyrk_(const char*, const char*, const int*, const int*, const double*, const double*, const int*, const double*, const double*, const int*, int, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:86</i><br>
	 * @deprecated use the safer methods {@link #dsyrk_(java.lang.String, java.lang.String, int[], int[], double[], double[], int[], double[], double[], int[], int, int)} and {@link #dsyrk_(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, int, int)} instead
	 */
	@Deprecated 
	void dsyrk_(Pointer uplo, Pointer trans, IntByReference n, IntByReference k, DoubleByReference alpha, DoubleByReference a, IntByReference lda, DoubleByReference beta, DoubleByReference c, IntByReference ldc, int len_uplo, int len_trans);
	/**
	 * Original signature : <code>void dsyrk_(const char*, const char*, const int*, const int*, const double*, const double*, const int*, const double*, const double*, const int*, int, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:86</i>
	 */
	void dsyrk_(String uplo, String trans, int n[], int k[], double alpha[], double a[], int lda[], double beta[], double c[], int ldc[], int len_uplo, int len_trans);
	/**
	 * Original signature : <code>void dgbtrf_(const int*, const int*, const int*, const int*, double*, int*, int*, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:92</i><br>
	 * @deprecated use the safer methods {@link #dgbtrf_(int[], int[], int[], int[], java.nio.DoubleBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #dgbtrf_(com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	void dgbtrf_(IntByReference m, IntByReference n, IntByReference kl, IntByReference ku, DoubleByReference ab, IntByReference ldab, IntByReference ipiv, IntByReference info);
	/**
	 * Original signature : <code>void dgbtrf_(const int*, const int*, const int*, const int*, double*, int*, int*, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:92</i>
	 */
	void dgbtrf_(int m[], int n[], int kl[], int ku[], DoubleBuffer ab, IntBuffer ldab, IntBuffer ipiv, IntBuffer info);
	/**
	 * Original signature : <code>void dgbtrs_(const char*, const int*, const int*, const int*, const int*, double*, const int*, int*, double*, const int*, int*, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:95</i><br>
	 * @deprecated use the safer methods {@link #dgbtrs_(java.lang.String, int[], int[], int[], int[], java.nio.DoubleBuffer, int[], java.nio.IntBuffer, java.nio.DoubleBuffer, int[], java.nio.IntBuffer, int)} and {@link #dgbtrs_(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, int)} instead
	 */
	@Deprecated 
	void dgbtrs_(Pointer trans, IntByReference n, IntByReference kl, IntByReference ku, IntByReference nrhs, DoubleByReference ab, IntByReference ldab, IntByReference ipiv, DoubleByReference b, IntByReference ldb, IntByReference info, int len_trans);
	/**
	 * Original signature : <code>void dgbtrs_(const char*, const int*, const int*, const int*, const int*, double*, const int*, int*, double*, const int*, int*, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:95</i>
	 */
	void dgbtrs_(String trans, int n[], int kl[], int ku[], int nrhs[], DoubleBuffer ab, int ldab[], IntBuffer ipiv, DoubleBuffer b, int ldb[], IntBuffer info, int len_trans);
	/**
	 * Original signature : <code>void dgeqp3_(const int*, const int*, double*, const int*, int*, double*, double*, const int*, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:100</i><br>
	 * @deprecated use the safer methods {@link #dgeqp3_(int[], int[], java.nio.DoubleBuffer, int[], java.nio.IntBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, int[], java.nio.IntBuffer)} and {@link #dgeqp3_(com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	void dgeqp3_(IntByReference m, IntByReference n, DoubleByReference a, IntByReference lda, IntByReference jpvt, DoubleByReference tau, DoubleByReference work, IntByReference lwork, IntByReference info);
	/**
	 * Original signature : <code>void dgeqp3_(const int*, const int*, double*, const int*, int*, double*, double*, const int*, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:100</i>
	 */
	void dgeqp3_(int m[], int n[], DoubleBuffer a, int lda[], IntBuffer jpvt, DoubleBuffer tau, DoubleBuffer work, int lwork[], IntBuffer info);
	/**
	 * Original signature : <code>void dgeqrf_(const int*, const int*, double*, const int*, double*, double*, const int*, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:103</i><br>
	 * @deprecated use the safer methods {@link #dgeqrf_(int[], int[], java.nio.DoubleBuffer, int[], java.nio.DoubleBuffer, java.nio.DoubleBuffer, int[], java.nio.IntBuffer)} and {@link #dgeqrf_(com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	void dgeqrf_(IntByReference m, IntByReference n, DoubleByReference a, IntByReference lda, DoubleByReference tau, DoubleByReference work, IntByReference lwork, IntByReference info);
	/**
	 * Original signature : <code>void dgeqrf_(const int*, const int*, double*, const int*, double*, double*, const int*, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:103</i>
	 */
	void dgeqrf_(int m[], int n[], DoubleBuffer a, int lda[], DoubleBuffer tau, DoubleBuffer work, int lwork[], IntBuffer info);
	/**
	 * Original signature : <code>void dgetrf_(const int*, const int*, double*, int*, int*, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:106</i><br>
	 * @deprecated use the safer methods {@link #dgetrf_(int[], int[], java.nio.DoubleBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #dgetrf_(com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	void dgetrf_(IntByReference m, IntByReference n, DoubleByReference a, IntByReference lda, IntByReference ipiv, IntByReference info);
	/**
	 * Original signature : <code>void dgetrf_(const int*, const int*, double*, int*, int*, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:106</i>
	 */
	void dgetrf_(int m[], int n[], DoubleBuffer a, IntBuffer lda, IntBuffer ipiv, IntBuffer info);
	/**
	 * Original signature : <code>void dgetrs_(const char*, const int*, const int*, double*, const int*, int*, double*, const int*, int*, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:108</i><br>
	 * @deprecated use the safer methods {@link #dgetrs_(java.lang.String, int[], int[], java.nio.DoubleBuffer, int[], java.nio.IntBuffer, java.nio.DoubleBuffer, int[], java.nio.IntBuffer, int)} and {@link #dgetrs_(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, int)} instead
	 */
	@Deprecated 
	void dgetrs_(Pointer trans, IntByReference n, IntByReference nrhs, DoubleByReference a, IntByReference lda, IntByReference ipiv, DoubleByReference b, IntByReference ldb, IntByReference info, int len_trans);
	/**
	 * Original signature : <code>void dgetrs_(const char*, const int*, const int*, double*, const int*, int*, double*, const int*, int*, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:108</i>
	 */
	void dgetrs_(String trans, int n[], int nrhs[], DoubleBuffer a, int lda[], IntBuffer ipiv, DoubleBuffer b, int ldb[], IntBuffer info, int len_trans);
	/**
	 * Original signature : <code>void dormqr_(const char*, const char*, const int*, const int*, const int*, double*, const int*, double*, double*, const int*, double*, const int*, int*, int, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:112</i><br>
	 * @deprecated use the safer methods {@link #dormqr_(java.lang.String, java.lang.String, int[], int[], int[], java.nio.DoubleBuffer, int[], java.nio.DoubleBuffer, java.nio.DoubleBuffer, int[], java.nio.DoubleBuffer, int[], java.nio.IntBuffer, int, int)} and {@link #dormqr_(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, int, int)} instead
	 */
	@Deprecated 
	void dormqr_(Pointer side, Pointer trans, IntByReference m, IntByReference n, IntByReference k, DoubleByReference a, IntByReference lda, DoubleByReference tau, DoubleByReference c, IntByReference ldc, DoubleByReference work, IntByReference lwork, IntByReference info, int len_side, int len_trans);
	/**
	 * Original signature : <code>void dormqr_(const char*, const char*, const int*, const int*, const int*, double*, const int*, double*, double*, const int*, double*, const int*, int*, int, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:112</i>
	 */
	void dormqr_(String side, String trans, int m[], int n[], int k[], DoubleBuffer a, int lda[], DoubleBuffer tau, DoubleBuffer c, int ldc[], DoubleBuffer work, int lwork[], IntBuffer info, int len_side, int len_trans);
	/**
	 * Original signature : <code>void dpotrf_(const char*, const int*, double*, int*, int*, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:116</i><br>
	 * @deprecated use the safer methods {@link #dpotrf_(java.lang.String, int[], java.nio.DoubleBuffer, java.nio.IntBuffer, java.nio.IntBuffer, int)} and {@link #dpotrf_(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, int)} instead
	 */
	@Deprecated 
	void dpotrf_(Pointer uplo, IntByReference n, DoubleByReference a, IntByReference lda, IntByReference info, int len_uplo);
	/**
	 * Original signature : <code>void dpotrf_(const char*, const int*, double*, int*, int*, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:116</i>
	 */
	void dpotrf_(String uplo, int n[], DoubleBuffer a, IntBuffer lda, IntBuffer info, int len_uplo);
	/**
	 * Original signature : <code>void dpotrs_(const char*, const int*, const int*, double*, const int*, double*, const int*, int*, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:118</i><br>
	 * @deprecated use the safer methods {@link #dpotrs_(java.lang.String, int[], int[], java.nio.DoubleBuffer, int[], java.nio.DoubleBuffer, int[], java.nio.IntBuffer, int)} and {@link #dpotrs_(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, int)} instead
	 */
	@Deprecated 
	void dpotrs_(Pointer uplo, IntByReference n, IntByReference nrhs, DoubleByReference a, IntByReference lda, DoubleByReference b, IntByReference ldb, IntByReference info, int len_uplo);
	/**
	 * Original signature : <code>void dpotrs_(const char*, const int*, const int*, double*, const int*, double*, const int*, int*, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_lapack.h:118</i>
	 */
	void dpotrs_(String uplo, int n[], int nrhs[], DoubleBuffer a, int lda[], DoubleBuffer b, int ldb[], IntBuffer info, int len_uplo);
	/**
	 * Original signature : <code>realtype RPowerI(realtype, int)</code><br>
	 * <i>native declaration : include\sundials\sundials_math.h:76</i>
	 */
	@Mangling({"_Z7RPowerIdi", "?RPowerI@@YANNH@Z"}) 
	double RPowerI(double base, int exponent);
	/**
	 * Original signature : <code>realtype RPowerR(realtype, realtype)</code><br>
	 * <i>native declaration : include\sundials\sundials_math.h:91</i>
	 */
	@Mangling({"_Z7RPowerRdd", "?RPowerR@@YANNN@Z"}) 
	double RPowerR(double base, double exponent);
	/**
	 * Original signature : <code>realtype RSqrt(realtype)</code><br>
	 * <i>native declaration : include\sundials\sundials_math.h:105</i>
	 */
	@Mangling({"_Z5RSqrtd", "?RSqrt@@YANN@Z"}) 
	double RSqrt(double x);
	/**
	 * Original signature : <code>realtype RAbs(realtype)</code><br>
	 * <i>native declaration : include\sundials\sundials_math.h:118</i>
	 */
	@Mangling({"_Z4RAbsd", "?RAbs@@YANN@Z"}) 
	double RAbs(double x);
	/**
	 * Original signature : <code>realtype RExp(realtype)</code><br>
	 * <i>native declaration : include\sundials\sundials_math.h:131</i>
	 */
	@Mangling({"_Z4RExpd", "?RExp@@YANN@Z"}) 
	double RExp(double x);
	/**
	 * Original signature : <code>SpbcgMem SpbcgMalloc(int, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_spbcgs.h:83</i>
	 */
	@Mangling({"_Z11SpbcgMallociP17_generic_N_Vector", "?SpbcgMalloc@@YAPA15SpbcgMem_structHPA17_generic_N_Vector@Z"}) 
	SpbcgMem_struct SpbcgMalloc(int l_max, _generic_N_Vector vec_tmpl);
	/**
	 * Original signature : <code>int SpbcgSolve(SpbcgMem, void*, N_Vector, N_Vector, int, realtype, void*, N_Vector, N_Vector, ATimesFn, PSolveFn, realtype*, int*, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_spbcgs.h:147</i><br>
	 * @deprecated use the safer methods {@link #SpbcgSolve(sundials.SpbcgMem_struct, com.sun.jna.Pointer, sundials._generic_N_Vector, sundials._generic_N_Vector, int, double, com.sun.jna.Pointer, sundials._generic_N_Vector, sundials._generic_N_Vector, sundials.SundialsLibrary.ATimesFn, sundials.SundialsLibrary.PSolveFn, java.nio.DoubleBuffer, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #SpbcgSolve(sundials.SpbcgMem_struct, com.sun.jna.Pointer, sundials._generic_N_Vector, sundials._generic_N_Vector, int, double, com.sun.jna.Pointer, sundials._generic_N_Vector, sundials._generic_N_Vector, sundials.SundialsLibrary.ATimesFn, sundials.SundialsLibrary.PSolveFn, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Mangling({"_Z10SpbcgSolveP15SpbcgMem_structPvP17_generic_N_VectorP17_generic_N_VectoridPvP17_generic_N_VectorP17_generic_N_VectorPFiPvP17_generic_N_VectorP17_generic_N_VectorEPFiPvP17_generic_N_VectorP17_generic_N_VectoriEPdPiPi", "?SpbcgSolve@@YAHPA15SpbcgMem_structPAXPA17_generic_N_VectorPA17_generic_N_VectorHNPAXPA17_generic_N_VectorPA17_generic_N_VectorPFHPAXPA17_generic_N_VectorPA17_generic_N_Vector@EPFHPAXPA17_generic_N_VectorPA17_generic_N_VectorH@EPANPAHPAH@Z"}) 
	@Deprecated 
	int SpbcgSolve(SpbcgMem_struct mem, Pointer A_data, _generic_N_Vector x, _generic_N_Vector b, int pretype, double delta, Pointer P_data, _generic_N_Vector sx, _generic_N_Vector sb, SundialsLibrary.ATimesFn atimes, SundialsLibrary.PSolveFn psolve, DoubleByReference res_norm, IntByReference nli, IntByReference nps);
	/**
	 * Original signature : <code>int SpbcgSolve(SpbcgMem, void*, N_Vector, N_Vector, int, realtype, void*, N_Vector, N_Vector, ATimesFn, PSolveFn, realtype*, int*, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_spbcgs.h:147</i>
	 */
	@Mangling({"_Z10SpbcgSolveP15SpbcgMem_structPvP17_generic_N_VectorP17_generic_N_VectoridPvP17_generic_N_VectorP17_generic_N_VectorPFiPvP17_generic_N_VectorP17_generic_N_VectorEPFiPvP17_generic_N_VectorP17_generic_N_VectoriEPdPiPi", "?SpbcgSolve@@YAHPA15SpbcgMem_structPAXPA17_generic_N_VectorPA17_generic_N_VectorHNPAXPA17_generic_N_VectorPA17_generic_N_VectorPFHPAXPA17_generic_N_VectorPA17_generic_N_Vector@EPFHPAXPA17_generic_N_VectorPA17_generic_N_VectorH@EPANPAHPAH@Z"}) 
	int SpbcgSolve(SpbcgMem_struct mem, Pointer A_data, _generic_N_Vector x, _generic_N_Vector b, int pretype, double delta, Pointer P_data, _generic_N_Vector sx, _generic_N_Vector sb, SundialsLibrary.ATimesFn atimes, SundialsLibrary.PSolveFn psolve, DoubleBuffer res_norm, IntBuffer nli, IntBuffer nps);
	/**
	 * Original signature : <code>void SpbcgFree(SpbcgMem)</code><br>
	 * <i>native declaration : include\sundials\sundials_spbcgs.h:175</i>
	 */
	@Mangling({"_Z9SpbcgFreeP15SpbcgMem_struct", "?SpbcgFree@@YAXPA15SpbcgMem_struct@Z"}) 
	void SpbcgFree(SpbcgMem_struct mem);
	/**
	 * Original signature : <code>SpgmrMem SpgmrMalloc(int, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_spgmr.h:151</i>
	 */
	@Mangling({"_Z11SpgmrMallociP17_generic_N_Vector", "?SpgmrMalloc@@YAPA11SpgmrMemRecHPA17_generic_N_Vector@Z"}) 
	SpgmrMemRec SpgmrMalloc(int l_max, _generic_N_Vector vec_tmpl);
	/**
	 * Original signature : <code>int SpgmrSolve(SpgmrMem, void*, N_Vector, N_Vector, int, int, realtype, int, void*, N_Vector, N_Vector, ATimesFn, PSolveFn, realtype*, int*, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_spgmr.h:238</i><br>
	 * @deprecated use the safer methods {@link #SpgmrSolve(sundials.SpgmrMemRec, com.sun.jna.Pointer, sundials._generic_N_Vector, sundials._generic_N_Vector, int, int, double, int, com.sun.jna.Pointer, sundials._generic_N_Vector, sundials._generic_N_Vector, sundials.SundialsLibrary.ATimesFn, sundials.SundialsLibrary.PSolveFn, java.nio.DoubleBuffer, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #SpgmrSolve(sundials.SpgmrMemRec, com.sun.jna.Pointer, sundials._generic_N_Vector, sundials._generic_N_Vector, int, int, double, int, com.sun.jna.Pointer, sundials._generic_N_Vector, sundials._generic_N_Vector, sundials.SundialsLibrary.ATimesFn, sundials.SundialsLibrary.PSolveFn, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Mangling({"_Z10SpgmrSolveP11SpgmrMemRecPvP17_generic_N_VectorP17_generic_N_VectoriidiPvP17_generic_N_VectorP17_generic_N_VectorPFiPvP17_generic_N_VectorP17_generic_N_VectorEPFiPvP17_generic_N_VectorP17_generic_N_VectoriEPdPiPi", "?SpgmrSolve@@YAHPA11SpgmrMemRecPAXPA17_generic_N_VectorPA17_generic_N_VectorHHNHPAXPA17_generic_N_VectorPA17_generic_N_VectorPFHPAXPA17_generic_N_VectorPA17_generic_N_Vector@EPFHPAXPA17_generic_N_VectorPA17_generic_N_VectorH@EPANPAHPAH@Z"}) 
	@Deprecated 
	int SpgmrSolve(SpgmrMemRec mem, Pointer A_data, _generic_N_Vector x, _generic_N_Vector b, int pretype, int gstype, double delta, int max_restarts, Pointer P_data, _generic_N_Vector s1, _generic_N_Vector s2, SundialsLibrary.ATimesFn atimes, SundialsLibrary.PSolveFn psolve, DoubleByReference res_norm, IntByReference nli, IntByReference nps);
	/**
	 * Original signature : <code>int SpgmrSolve(SpgmrMem, void*, N_Vector, N_Vector, int, int, realtype, int, void*, N_Vector, N_Vector, ATimesFn, PSolveFn, realtype*, int*, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_spgmr.h:238</i>
	 */
	@Mangling({"_Z10SpgmrSolveP11SpgmrMemRecPvP17_generic_N_VectorP17_generic_N_VectoriidiPvP17_generic_N_VectorP17_generic_N_VectorPFiPvP17_generic_N_VectorP17_generic_N_VectorEPFiPvP17_generic_N_VectorP17_generic_N_VectoriEPdPiPi", "?SpgmrSolve@@YAHPA11SpgmrMemRecPAXPA17_generic_N_VectorPA17_generic_N_VectorHHNHPAXPA17_generic_N_VectorPA17_generic_N_VectorPFHPAXPA17_generic_N_VectorPA17_generic_N_Vector@EPFHPAXPA17_generic_N_VectorPA17_generic_N_VectorH@EPANPAHPAH@Z"}) 
	int SpgmrSolve(SpgmrMemRec mem, Pointer A_data, _generic_N_Vector x, _generic_N_Vector b, int pretype, int gstype, double delta, int max_restarts, Pointer P_data, _generic_N_Vector s1, _generic_N_Vector s2, SundialsLibrary.ATimesFn atimes, SundialsLibrary.PSolveFn psolve, DoubleBuffer res_norm, IntBuffer nli, IntBuffer nps);
	/**
	 * Original signature : <code>void SpgmrFree(SpgmrMem)</code><br>
	 * <i>native declaration : include\sundials\sundials_spgmr.h:271</i>
	 */
	@Mangling({"_Z9SpgmrFreeP11SpgmrMemRec", "?SpgmrFree@@YAXPA11SpgmrMemRec@Z"}) 
	void SpgmrFree(SpgmrMemRec mem);
	/**
	 * Original signature : <code>SptfqmrMem SptfqmrMalloc(int, N_Vector)</code><br>
	 * <i>native declaration : include\sundials\sundials_sptfqmr.h:136</i>
	 */
	@Mangling({"_Z13SptfqmrMallociP17_generic_N_Vector", "?SptfqmrMalloc@@YAPA17SptfqmrMem_structHPA17_generic_N_Vector@Z"}) 
	SptfqmrMem_struct SptfqmrMalloc(int l_max, _generic_N_Vector vec_tmpl);
	/**
	 * Original signature : <code>int SptfqmrSolve(SptfqmrMem, void*, N_Vector, N_Vector, int, realtype, void*, N_Vector, N_Vector, ATimesFn, PSolveFn, realtype*, int*, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_sptfqmr.h:201</i><br>
	 * @deprecated use the safer methods {@link #SptfqmrSolve(sundials.SptfqmrMem_struct, com.sun.jna.Pointer, sundials._generic_N_Vector, sundials._generic_N_Vector, int, double, com.sun.jna.Pointer, sundials._generic_N_Vector, sundials._generic_N_Vector, sundials.SundialsLibrary.ATimesFn, sundials.SundialsLibrary.PSolveFn, java.nio.DoubleBuffer, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #SptfqmrSolve(sundials.SptfqmrMem_struct, com.sun.jna.Pointer, sundials._generic_N_Vector, sundials._generic_N_Vector, int, double, com.sun.jna.Pointer, sundials._generic_N_Vector, sundials._generic_N_Vector, sundials.SundialsLibrary.ATimesFn, sundials.SundialsLibrary.PSolveFn, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Mangling({"_Z12SptfqmrSolveP17SptfqmrMem_structPvP17_generic_N_VectorP17_generic_N_VectoridPvP17_generic_N_VectorP17_generic_N_VectorPFiPvP17_generic_N_VectorP17_generic_N_VectorEPFiPvP17_generic_N_VectorP17_generic_N_VectoriEPdPiPi", "?SptfqmrSolve@@YAHPA17SptfqmrMem_structPAXPA17_generic_N_VectorPA17_generic_N_VectorHNPAXPA17_generic_N_VectorPA17_generic_N_VectorPFHPAXPA17_generic_N_VectorPA17_generic_N_Vector@EPFHPAXPA17_generic_N_VectorPA17_generic_N_VectorH@EPANPAHPAH@Z"}) 
	@Deprecated 
	int SptfqmrSolve(SptfqmrMem_struct mem, Pointer A_data, _generic_N_Vector x, _generic_N_Vector b, int pretype, double delta, Pointer P_data, _generic_N_Vector sx, _generic_N_Vector sb, SundialsLibrary.ATimesFn atimes, SundialsLibrary.PSolveFn psolve, DoubleByReference res_norm, IntByReference nli, IntByReference nps);
	/**
	 * Original signature : <code>int SptfqmrSolve(SptfqmrMem, void*, N_Vector, N_Vector, int, realtype, void*, N_Vector, N_Vector, ATimesFn, PSolveFn, realtype*, int*, int*)</code><br>
	 * <i>native declaration : include\sundials\sundials_sptfqmr.h:201</i>
	 */
	@Mangling({"_Z12SptfqmrSolveP17SptfqmrMem_structPvP17_generic_N_VectorP17_generic_N_VectoridPvP17_generic_N_VectorP17_generic_N_VectorPFiPvP17_generic_N_VectorP17_generic_N_VectorEPFiPvP17_generic_N_VectorP17_generic_N_VectoriEPdPiPi", "?SptfqmrSolve@@YAHPA17SptfqmrMem_structPAXPA17_generic_N_VectorPA17_generic_N_VectorHNPAXPA17_generic_N_VectorPA17_generic_N_VectorPFHPAXPA17_generic_N_VectorPA17_generic_N_Vector@EPFHPAXPA17_generic_N_VectorPA17_generic_N_VectorH@EPANPAHPAH@Z"}) 
	int SptfqmrSolve(SptfqmrMem_struct mem, Pointer A_data, _generic_N_Vector x, _generic_N_Vector b, int pretype, double delta, Pointer P_data, _generic_N_Vector sx, _generic_N_Vector sb, SundialsLibrary.ATimesFn atimes, SundialsLibrary.PSolveFn psolve, DoubleBuffer res_norm, IntBuffer nli, IntBuffer nps);
	/**
	 * Original signature : <code>void SptfqmrFree(SptfqmrMem)</code><br>
	 * <i>native declaration : include\sundials\sundials_sptfqmr.h:229</i>
	 */
	@Mangling({"_Z11SptfqmrFreeP17SptfqmrMem_struct", "?SptfqmrFree@@YAXPA17SptfqmrMem_struct@Z"}) 
	void SptfqmrFree(SptfqmrMem_struct mem);
}
