package fit.jvode.jna.sundials;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.ptr.DoubleByReference;
import com.sun.jna.ptr.PointerByReference;
/**
 * <i>native declaration : include\sundials\sundials_spgmr.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SpgmrMemRec extends Structure<SpgmrMemRec, SpgmrMemRec.ByValue, SpgmrMemRec.ByReference > {
	public int l_max;
	/// C type : N_Vector*
	public PointerByReference V;
	/// C type : realtype**
	public PointerByReference Hes;
	/// C type : realtype*
	public DoubleByReference givens;
	/// C type : N_Vector
	public _generic_N_Vector.ByReference xcor;
	/// C type : realtype*
	public DoubleByReference yg;
	/// C type : N_Vector
	public _generic_N_Vector.ByReference vtemp;
	public SpgmrMemRec() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"l_max", "V", "Hes", "givens", "xcor", "yg", "vtemp"});
	}
	/**
	 * @param V C type : N_Vector*<br>
	 * @param Hes C type : realtype**<br>
	 * @param givens C type : realtype*<br>
	 * @param xcor C type : N_Vector<br>
	 * @param yg C type : realtype*<br>
	 * @param vtemp C type : N_Vector
	 */
	public SpgmrMemRec(int l_max, PointerByReference V, PointerByReference Hes, DoubleByReference givens, _generic_N_Vector.ByReference xcor, DoubleByReference yg, _generic_N_Vector.ByReference vtemp) {
		super();
		this.l_max = l_max;
		this.V = V;
		this.Hes = Hes;
		this.givens = givens;
		this.xcor = xcor;
		this.yg = yg;
		this.vtemp = vtemp;
		initFieldOrder();
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected SpgmrMemRec newInstance() { return new SpgmrMemRec(); }
	public static SpgmrMemRec[] newArray(int arrayLength) {
		return Structure.newArray(SpgmrMemRec.class, arrayLength);
	}
	public static class ByReference extends SpgmrMemRec implements Structure.ByReference {
		
	};
	public static class ByValue extends SpgmrMemRec implements Structure.ByValue {
		
	};
}
