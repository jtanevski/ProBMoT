package fit.jvode.bridj.sundials;
import org.bridj.Callback;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * Structure containing function pointers to vector operations<br>
 * <i>native declaration : include\sundials\sundials_nvector.h:66</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */

public class _generic_N_Vector_Ops extends StructObject {
	public _generic_N_Vector_Ops() {
		super();
	}
	public _generic_N_Vector_Ops(Pointer pointer) {
		super(pointer);
	}
	/// C type : nvclone_callback
	@Field(0) 
	public Pointer<_generic_N_Vector_Ops.nvclone_callback > nvclone() {
		return this.io.getPointerField(this, 0);
	}
	/// C type : nvclone_callback
	@Field(0) 
	public _generic_N_Vector_Ops nvclone(Pointer<_generic_N_Vector_Ops.nvclone_callback > nvclone) {
		this.io.setPointerField(this, 0, nvclone);
		return this;
	}
	/// C type : nvcloneempty_callback
	@Field(1) 
	public Pointer<_generic_N_Vector_Ops.nvcloneempty_callback > nvcloneempty() {
		return this.io.getPointerField(this, 1);
	}
	/// C type : nvcloneempty_callback
	@Field(1) 
	public _generic_N_Vector_Ops nvcloneempty(Pointer<_generic_N_Vector_Ops.nvcloneempty_callback > nvcloneempty) {
		this.io.setPointerField(this, 1, nvcloneempty);
		return this;
	}
	/// C type : nvdestroy_callback
	@Field(2) 
	public Pointer<_generic_N_Vector_Ops.nvdestroy_callback > nvdestroy() {
		return this.io.getPointerField(this, 2);
	}
	/// C type : nvdestroy_callback
	@Field(2) 
	public _generic_N_Vector_Ops nvdestroy(Pointer<_generic_N_Vector_Ops.nvdestroy_callback > nvdestroy) {
		this.io.setPointerField(this, 2, nvdestroy);
		return this;
	}
	/// C type : nvspace_callback
	@Field(3) 
	public Pointer<_generic_N_Vector_Ops.nvspace_callback > nvspace() {
		return this.io.getPointerField(this, 3);
	}
	/// C type : nvspace_callback
	@Field(3) 
	public _generic_N_Vector_Ops nvspace(Pointer<_generic_N_Vector_Ops.nvspace_callback > nvspace) {
		this.io.setPointerField(this, 3, nvspace);
		return this;
	}
	/// C type : nvgetarraypointer_callback
	@Field(4) 
	public Pointer<_generic_N_Vector_Ops.nvgetarraypointer_callback > nvgetarraypointer() {
		return this.io.getPointerField(this, 4);
	}
	/// C type : nvgetarraypointer_callback
	@Field(4) 
	public _generic_N_Vector_Ops nvgetarraypointer(Pointer<_generic_N_Vector_Ops.nvgetarraypointer_callback > nvgetarraypointer) {
		this.io.setPointerField(this, 4, nvgetarraypointer);
		return this;
	}
	/// C type : nvsetarraypointer_callback
	@Field(5) 
	public Pointer<_generic_N_Vector_Ops.nvsetarraypointer_callback > nvsetarraypointer() {
		return this.io.getPointerField(this, 5);
	}
	/// C type : nvsetarraypointer_callback
	@Field(5) 
	public _generic_N_Vector_Ops nvsetarraypointer(Pointer<_generic_N_Vector_Ops.nvsetarraypointer_callback > nvsetarraypointer) {
		this.io.setPointerField(this, 5, nvsetarraypointer);
		return this;
	}
	/// C type : nvlinearsum_callback
	@Field(6) 
	public Pointer<_generic_N_Vector_Ops.nvlinearsum_callback > nvlinearsum() {
		return this.io.getPointerField(this, 6);
	}
	/// C type : nvlinearsum_callback
	@Field(6) 
	public _generic_N_Vector_Ops nvlinearsum(Pointer<_generic_N_Vector_Ops.nvlinearsum_callback > nvlinearsum) {
		this.io.setPointerField(this, 6, nvlinearsum);
		return this;
	}
	/// C type : nvconst_callback
	@Field(7) 
	public Pointer<_generic_N_Vector_Ops.nvconst_callback > nvconst() {
		return this.io.getPointerField(this, 7);
	}
	/// C type : nvconst_callback
	@Field(7) 
	public _generic_N_Vector_Ops nvconst(Pointer<_generic_N_Vector_Ops.nvconst_callback > nvconst) {
		this.io.setPointerField(this, 7, nvconst);
		return this;
	}
	/// C type : nvprod_callback
	@Field(8) 
	public Pointer<_generic_N_Vector_Ops.nvprod_callback > nvprod() {
		return this.io.getPointerField(this, 8);
	}
	/// C type : nvprod_callback
	@Field(8) 
	public _generic_N_Vector_Ops nvprod(Pointer<_generic_N_Vector_Ops.nvprod_callback > nvprod) {
		this.io.setPointerField(this, 8, nvprod);
		return this;
	}
	/// C type : nvdiv_callback
	@Field(9) 
	public Pointer<_generic_N_Vector_Ops.nvdiv_callback > nvdiv() {
		return this.io.getPointerField(this, 9);
	}
	/// C type : nvdiv_callback
	@Field(9) 
	public _generic_N_Vector_Ops nvdiv(Pointer<_generic_N_Vector_Ops.nvdiv_callback > nvdiv) {
		this.io.setPointerField(this, 9, nvdiv);
		return this;
	}
	/// C type : nvscale_callback
	@Field(10) 
	public Pointer<_generic_N_Vector_Ops.nvscale_callback > nvscale() {
		return this.io.getPointerField(this, 10);
	}
	/// C type : nvscale_callback
	@Field(10) 
	public _generic_N_Vector_Ops nvscale(Pointer<_generic_N_Vector_Ops.nvscale_callback > nvscale) {
		this.io.setPointerField(this, 10, nvscale);
		return this;
	}
	/// C type : nvabs_callback
	@Field(11) 
	public Pointer<_generic_N_Vector_Ops.nvabs_callback > nvabs() {
		return this.io.getPointerField(this, 11);
	}
	/// C type : nvabs_callback
	@Field(11) 
	public _generic_N_Vector_Ops nvabs(Pointer<_generic_N_Vector_Ops.nvabs_callback > nvabs) {
		this.io.setPointerField(this, 11, nvabs);
		return this;
	}
	/// C type : nvinv_callback
	@Field(12) 
	public Pointer<_generic_N_Vector_Ops.nvinv_callback > nvinv() {
		return this.io.getPointerField(this, 12);
	}
	/// C type : nvinv_callback
	@Field(12) 
	public _generic_N_Vector_Ops nvinv(Pointer<_generic_N_Vector_Ops.nvinv_callback > nvinv) {
		this.io.setPointerField(this, 12, nvinv);
		return this;
	}
	/// C type : nvaddconst_callback
	@Field(13) 
	public Pointer<_generic_N_Vector_Ops.nvaddconst_callback > nvaddconst() {
		return this.io.getPointerField(this, 13);
	}
	/// C type : nvaddconst_callback
	@Field(13) 
	public _generic_N_Vector_Ops nvaddconst(Pointer<_generic_N_Vector_Ops.nvaddconst_callback > nvaddconst) {
		this.io.setPointerField(this, 13, nvaddconst);
		return this;
	}
	/// C type : nvdotprod_callback
	@Field(14) 
	public Pointer<_generic_N_Vector_Ops.nvdotprod_callback > nvdotprod() {
		return this.io.getPointerField(this, 14);
	}
	/// C type : nvdotprod_callback
	@Field(14) 
	public _generic_N_Vector_Ops nvdotprod(Pointer<_generic_N_Vector_Ops.nvdotprod_callback > nvdotprod) {
		this.io.setPointerField(this, 14, nvdotprod);
		return this;
	}
	/// C type : nvmaxnorm_callback
	@Field(15) 
	public Pointer<_generic_N_Vector_Ops.nvmaxnorm_callback > nvmaxnorm() {
		return this.io.getPointerField(this, 15);
	}
	/// C type : nvmaxnorm_callback
	@Field(15) 
	public _generic_N_Vector_Ops nvmaxnorm(Pointer<_generic_N_Vector_Ops.nvmaxnorm_callback > nvmaxnorm) {
		this.io.setPointerField(this, 15, nvmaxnorm);
		return this;
	}
	/// C type : nvwrmsnorm_callback
	@Field(16) 
	public Pointer<_generic_N_Vector_Ops.nvwrmsnorm_callback > nvwrmsnorm() {
		return this.io.getPointerField(this, 16);
	}
	/// C type : nvwrmsnorm_callback
	@Field(16) 
	public _generic_N_Vector_Ops nvwrmsnorm(Pointer<_generic_N_Vector_Ops.nvwrmsnorm_callback > nvwrmsnorm) {
		this.io.setPointerField(this, 16, nvwrmsnorm);
		return this;
	}
	/// C type : nvwrmsnormmask_callback
	@Field(17) 
	public Pointer<_generic_N_Vector_Ops.nvwrmsnormmask_callback > nvwrmsnormmask() {
		return this.io.getPointerField(this, 17);
	}
	/// C type : nvwrmsnormmask_callback
	@Field(17) 
	public _generic_N_Vector_Ops nvwrmsnormmask(Pointer<_generic_N_Vector_Ops.nvwrmsnormmask_callback > nvwrmsnormmask) {
		this.io.setPointerField(this, 17, nvwrmsnormmask);
		return this;
	}
	/// C type : nvmin_callback
	@Field(18) 
	public Pointer<_generic_N_Vector_Ops.nvmin_callback > nvmin() {
		return this.io.getPointerField(this, 18);
	}
	/// C type : nvmin_callback
	@Field(18) 
	public _generic_N_Vector_Ops nvmin(Pointer<_generic_N_Vector_Ops.nvmin_callback > nvmin) {
		this.io.setPointerField(this, 18, nvmin);
		return this;
	}
	/// C type : nvwl2norm_callback
	@Field(19) 
	public Pointer<_generic_N_Vector_Ops.nvwl2norm_callback > nvwl2norm() {
		return this.io.getPointerField(this, 19);
	}
	/// C type : nvwl2norm_callback
	@Field(19) 
	public _generic_N_Vector_Ops nvwl2norm(Pointer<_generic_N_Vector_Ops.nvwl2norm_callback > nvwl2norm) {
		this.io.setPointerField(this, 19, nvwl2norm);
		return this;
	}
	/// C type : nvl1norm_callback
	@Field(20) 
	public Pointer<_generic_N_Vector_Ops.nvl1norm_callback > nvl1norm() {
		return this.io.getPointerField(this, 20);
	}
	/// C type : nvl1norm_callback
	@Field(20) 
	public _generic_N_Vector_Ops nvl1norm(Pointer<_generic_N_Vector_Ops.nvl1norm_callback > nvl1norm) {
		this.io.setPointerField(this, 20, nvl1norm);
		return this;
	}
	/// C type : nvcompare_callback
	@Field(21) 
	public Pointer<_generic_N_Vector_Ops.nvcompare_callback > nvcompare() {
		return this.io.getPointerField(this, 21);
	}
	/// C type : nvcompare_callback
	@Field(21) 
	public _generic_N_Vector_Ops nvcompare(Pointer<_generic_N_Vector_Ops.nvcompare_callback > nvcompare) {
		this.io.setPointerField(this, 21, nvcompare);
		return this;
	}
	/// C type : nvinvtest_callback
	@Field(22) 
	public Pointer<_generic_N_Vector_Ops.nvinvtest_callback > nvinvtest() {
		return this.io.getPointerField(this, 22);
	}
	/// C type : nvinvtest_callback
	@Field(22) 
	public _generic_N_Vector_Ops nvinvtest(Pointer<_generic_N_Vector_Ops.nvinvtest_callback > nvinvtest) {
		this.io.setPointerField(this, 22, nvinvtest);
		return this;
	}
	/// C type : nvconstrmask_callback
	@Field(23) 
	public Pointer<_generic_N_Vector_Ops.nvconstrmask_callback > nvconstrmask() {
		return this.io.getPointerField(this, 23);
	}
	/// C type : nvconstrmask_callback
	@Field(23) 
	public _generic_N_Vector_Ops nvconstrmask(Pointer<_generic_N_Vector_Ops.nvconstrmask_callback > nvconstrmask) {
		this.io.setPointerField(this, 23, nvconstrmask);
		return this;
	}
	/// C type : nvminquotient_callback
	@Field(24) 
	public Pointer<_generic_N_Vector_Ops.nvminquotient_callback > nvminquotient() {
		return this.io.getPointerField(this, 24);
	}
	/// C type : nvminquotient_callback
	@Field(24) 
	public _generic_N_Vector_Ops nvminquotient(Pointer<_generic_N_Vector_Ops.nvminquotient_callback > nvminquotient) {
		this.io.setPointerField(this, 24, nvminquotient);
		return this;
	}
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvclone_callback extends Callback<nvclone_callback > {
		public abstract Pointer<_generic_N_Vector > apply(Pointer<_generic_N_Vector > N_Vector1);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvcloneempty_callback extends Callback<nvcloneempty_callback > {
		public abstract Pointer<_generic_N_Vector > apply(Pointer<_generic_N_Vector > N_Vector1);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvdestroy_callback extends Callback<nvdestroy_callback > {
		public abstract void apply(Pointer<_generic_N_Vector > N_Vector1);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvspace_callback extends Callback<nvspace_callback > {
		public abstract void apply(Pointer<_generic_N_Vector > N_Vector1, Pointer<Integer > intPtr1, Pointer<Integer > intPtr2);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvgetarraypointer_callback extends Callback<nvgetarraypointer_callback > {
		public abstract Pointer<Double > apply(Pointer<_generic_N_Vector > N_Vector1);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvsetarraypointer_callback extends Callback<nvsetarraypointer_callback > {
		public abstract void apply(Pointer<Double > realtypePtr1, Pointer<_generic_N_Vector > N_Vector1);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvlinearsum_callback extends Callback<nvlinearsum_callback > {
		public abstract void apply(double realtype1, Pointer<_generic_N_Vector > N_Vector1, double realtype2, Pointer<_generic_N_Vector > N_Vector2, Pointer<_generic_N_Vector > N_Vector3);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvconst_callback extends Callback<nvconst_callback > {
		public abstract void apply(double realtype1, Pointer<_generic_N_Vector > N_Vector1);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvprod_callback extends Callback<nvprod_callback > {
		public abstract void apply(Pointer<_generic_N_Vector > N_Vector1, Pointer<_generic_N_Vector > N_Vector2, Pointer<_generic_N_Vector > N_Vector3);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvdiv_callback extends Callback<nvdiv_callback > {
		public abstract void apply(Pointer<_generic_N_Vector > N_Vector1, Pointer<_generic_N_Vector > N_Vector2, Pointer<_generic_N_Vector > N_Vector3);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvscale_callback extends Callback<nvscale_callback > {
		public abstract void apply(double realtype1, Pointer<_generic_N_Vector > N_Vector1, Pointer<_generic_N_Vector > N_Vector2);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvabs_callback extends Callback<nvabs_callback > {
		public abstract void apply(Pointer<_generic_N_Vector > N_Vector1, Pointer<_generic_N_Vector > N_Vector2);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvinv_callback extends Callback<nvinv_callback > {
		public abstract void apply(Pointer<_generic_N_Vector > N_Vector1, Pointer<_generic_N_Vector > N_Vector2);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvaddconst_callback extends Callback<nvaddconst_callback > {
		public abstract void apply(Pointer<_generic_N_Vector > N_Vector1, double realtype1, Pointer<_generic_N_Vector > N_Vector2);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvdotprod_callback extends Callback<nvdotprod_callback > {
		public abstract double apply(Pointer<_generic_N_Vector > N_Vector1, Pointer<_generic_N_Vector > N_Vector2);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvmaxnorm_callback extends Callback<nvmaxnorm_callback > {
		public abstract double apply(Pointer<_generic_N_Vector > N_Vector1);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvwrmsnorm_callback extends Callback<nvwrmsnorm_callback > {
		public abstract double apply(Pointer<_generic_N_Vector > N_Vector1, Pointer<_generic_N_Vector > N_Vector2);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvwrmsnormmask_callback extends Callback<nvwrmsnormmask_callback > {
		public abstract double apply(Pointer<_generic_N_Vector > N_Vector1, Pointer<_generic_N_Vector > N_Vector2, Pointer<_generic_N_Vector > N_Vector3);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvmin_callback extends Callback<nvmin_callback > {
		public abstract double apply(Pointer<_generic_N_Vector > N_Vector1);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvwl2norm_callback extends Callback<nvwl2norm_callback > {
		public abstract double apply(Pointer<_generic_N_Vector > N_Vector1, Pointer<_generic_N_Vector > N_Vector2);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvl1norm_callback extends Callback<nvl1norm_callback > {
		public abstract double apply(Pointer<_generic_N_Vector > N_Vector1);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvcompare_callback extends Callback<nvcompare_callback > {
		public abstract void apply(double realtype1, Pointer<_generic_N_Vector > N_Vector1, Pointer<_generic_N_Vector > N_Vector2);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvinvtest_callback extends Callback<nvinvtest_callback > {
		public abstract int apply(Pointer<_generic_N_Vector > N_Vector1, Pointer<_generic_N_Vector > N_Vector2);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvconstrmask_callback extends Callback<nvconstrmask_callback > {
		public abstract int apply(Pointer<_generic_N_Vector > N_Vector1, Pointer<_generic_N_Vector > N_Vector2, Pointer<_generic_N_Vector > N_Vector3);
	};
	/// <i>native declaration : include\sundials\sundials_nvector.h</i>
	public static abstract class nvminquotient_callback extends Callback<nvminquotient_callback > {
		public abstract double apply(Pointer<_generic_N_Vector > N_Vector1, Pointer<_generic_N_Vector > N_Vector2);
	};
}
